//
// MHVActionPlanTasksApi.h
// MHVLib
//
// Copyright (c) 2017 Microsoft Corporation. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#import <Foundation/Foundation.h>
#import "MHVRemoteMonitoringClient.h"
#import "MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_.h"
#import "MHVActionPlanTasksResponseV2ActionPlanTaskInstance_.h"
#import "MHVMicrosoftKhronosCloudCommonErrorsErrorResponse.h"
#import "MHVSystemObject.h"
#import "MHVTrackingValidation.h"
#import "MHVV2ActionPlanTask.h"
#import "MHVV2ActionPlanTaskInstance.h"


NS_ASSUME_NONNULL_BEGIN

@interface MHVRemoteMonitoringClient (MHVActionPlanTasksApi)

/// Delete a task by id
/// 
///
/// @param actionPlanTaskId 
/// 
///  code:200 message:"OK",
///  code:204 message:"NoContent",
///  code:0 message:"Error"
///
/// @return MHVSystemObject*
+ (NSURLSessionTask* _Nullable)deleteActionPlanTasksByIdWithActionPlanTaskId: (NSString* ) actionPlanTaskId
    completionHandler: (void (^ _Nonnull)(MHVSystemObject* _Nullable output, NSError* _Nullable error)) handler;


/// Get a task by id
/// 
///
/// @param actionPlanTaskId 
/// 
///  code:200 message:"OK",
///  code:0 message:"Error"
///
/// @return MHVV2ActionPlanTaskInstance*
+ (NSURLSessionTask* _Nullable)getActionPlanTaskByIdWithActionPlanTaskId: (NSString* ) actionPlanTaskId
    completionHandler: (void (^ _Nonnull)(MHVV2ActionPlanTaskInstance* _Nullable output, NSError* _Nullable error)) handler;


/// Get a collection of task definitions
/// 
///
/// @param actionPlanTaskStatus  (optional)
/// @param maxPageSize The maximum number of entries to return per page. Defaults to 1000. (optional)
/// 
///  code:200 message:"OK",
///  code:0 message:"Error"
///
/// @return MHVActionPlanTasksResponseV2ActionPlanTaskInstance_*
+ (NSURLSessionTask* _Nullable)getActionPlanTasksWithActionPlanTaskStatus: (NSString* _Nullable) actionPlanTaskStatus
    maxPageSize: (NSNumber* _Nullable) maxPageSize
    completionHandler: (void (^ _Nonnull)(MHVActionPlanTasksResponseV2ActionPlanTaskInstance_* _Nullable output, NSError* _Nullable error)) handler;


/// Patch an update for an action plan task
/// 
///
/// @param actionPlanTask 
/// 
///  code:200 message:"OK",
///  code:0 message:"Error"
///
/// @return MHVActionPlanTasksResponseV2ActionPlanTaskInstance_*
+ (NSURLSessionTask* _Nullable)patchActionPlanTasksWithActionPlanTask: (MHVV2ActionPlanTaskInstance* ) actionPlanTask
    completionHandler: (void (^ _Nonnull)(MHVActionPlanTasksResponseV2ActionPlanTaskInstance_* _Nullable output, NSError* _Nullable error)) handler;


/// Post a new action plan task
/// 
///
/// @param actionPlanTask 
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:0 message:"Error"
///
/// @return MHVSystemObject*
+ (NSURLSessionTask* _Nullable)postActionPlanTasksWithActionPlanTask: (MHVV2ActionPlanTask* ) actionPlanTask
    completionHandler: (void (^ _Nonnull)(MHVSystemObject* _Nullable output, NSError* _Nullable error)) handler;


/// Put an update for an action plan task
/// 
///
/// @param actionPlanTask 
/// 
///  code:200 message:"OK",
///  code:0 message:"Error"
///
/// @return MHVActionPlanTasksResponseV2ActionPlanTaskInstance_*
+ (NSURLSessionTask* _Nullable)putActionPlanTasksWithActionPlanTask: (MHVV2ActionPlanTaskInstance* ) actionPlanTask
    completionHandler: (void (^ _Nonnull)(MHVActionPlanTasksResponseV2ActionPlanTaskInstance_* _Nullable output, NSError* _Nullable error)) handler;


/// 
/// 
///
/// @param trackingValidation 
/// 
///  code:200 message:"OK",
///  code:0 message:"Error"
///
/// @return MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_*
+ (NSURLSessionTask* _Nullable)validateActionPlanTasksTrackingWithTrackingValidation: (MHVTrackingValidation* ) trackingValidation
    completionHandler: (void (^ _Nonnull)(MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_* _Nullable output, NSError* _Nullable error)) handler;



@end

NS_ASSUME_NONNULL_END
