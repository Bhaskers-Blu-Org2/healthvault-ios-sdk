//
// MHVActionPlanTasksApi.m
// MHVLib
//
// Copyright (c) 2017 Microsoft Corporation. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#import <Foundation/Foundation.h>
#import "MHVRemoteMonitoringClient.h"
#import "MHVClient.h"
#import "MHVActionPlanTasksApi.h"
#import "MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_.h"
#import "MHVActionPlanTasksResponseV2ActionPlanTaskInstance_.h"
#import "MHVMicrosoftKhronosCloudCommonErrorsErrorResponse.h"
#import "MHVSystemObject.h"
#import "MHVTrackingValidation.h"
#import "MHVV2ActionPlanTask.h"
#import "MHVV2ActionPlanTaskInstance.h"


@implementation MHVRemoteMonitoringClient (MHVActionPlanTasksApi)

NSString* kMHVActionPlanTasksApiErrorDomain = @"MHVActionPlanTasksApiErrorDomain";
NSInteger kMHVActionPlanTasksApiMissingParamErrorCode = 234513;

#pragma mark - Api Methods

///
/// Delete a task by id
/// 
///  @param actionPlanTaskId  
///
///  @returns MHVSystemObject*
///
+ (NSURLSessionTask*)deleteActionPlanTasksByIdWithActionPlanTaskId: (NSString*) actionPlanTaskId
    completionHandler: (void (^ _Nonnull)(MHVSystemObject* _Nullable output, NSError* _Nullable error)) handler {
    // verify the required parameter 'actionPlanTaskId' is set
    if (actionPlanTaskId == nil) {
        NSParameterAssert(actionPlanTaskId);
        if(handler) {
            NSDictionary * userInfo = @{NSLocalizedDescriptionKey : [NSString stringWithFormat:NSLocalizedString(@"Missing required parameter '%@'", nil),@"actionPlanTaskId"] };
            NSError* error = [NSError errorWithDomain:kMHVActionPlanTasksApiErrorDomain code:kMHVActionPlanTasksApiMissingParamErrorCode userInfo:userInfo];
            handler(nil, error);
        }
        return nil;
    }

    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks/{actionPlanTaskId}"];

    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];
    if (actionPlanTaskId != nil) {
        pathParams[@"actionPlanTaskId"] = actionPlanTaskId;
    }

    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];

    id bodyParam = nil;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];

    return [MHVRemoteMonitoringClient requestWithPath: resourcePath
                                    method: @"DELETE"
                                pathParams: pathParams
                               queryParams: queryParams
                                formParams: formParams
                                      body: bodyParam
                                   toClass: [MHVSystemObject class]
                    //        responseType: [MHVSystemObject* class]
                           completionBlock: ^(id data, NSError *error) {
                                if(handler) {
                                    handler((MHVSystemObject*)data, error);
                                }
                            }];
}

///
/// Get a task by id
/// 
///  @param actionPlanTaskId  
///
///  @returns MHVV2ActionPlanTaskInstance*
///
+ (NSURLSessionTask*)getActionPlanTaskByIdWithActionPlanTaskId: (NSString*) actionPlanTaskId
    completionHandler: (void (^ _Nonnull)(MHVV2ActionPlanTaskInstance* _Nullable output, NSError* _Nullable error)) handler {
    // verify the required parameter 'actionPlanTaskId' is set
    if (actionPlanTaskId == nil) {
        NSParameterAssert(actionPlanTaskId);
        if(handler) {
            NSDictionary * userInfo = @{NSLocalizedDescriptionKey : [NSString stringWithFormat:NSLocalizedString(@"Missing required parameter '%@'", nil),@"actionPlanTaskId"] };
            NSError* error = [NSError errorWithDomain:kMHVActionPlanTasksApiErrorDomain code:kMHVActionPlanTasksApiMissingParamErrorCode userInfo:userInfo];
            handler(nil, error);
        }
        return nil;
    }

    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks/{actionPlanTaskId}"];

    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];
    if (actionPlanTaskId != nil) {
        pathParams[@"actionPlanTaskId"] = actionPlanTaskId;
    }

    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];

    id bodyParam = nil;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];

    return [MHVRemoteMonitoringClient requestWithPath: resourcePath
                                    method: @"GET"
                                pathParams: pathParams
                               queryParams: queryParams
                                formParams: formParams
                                      body: bodyParam
                                   toClass: [MHVV2ActionPlanTaskInstance class]
                    //        responseType: [MHVV2ActionPlanTaskInstance* class]
                           completionBlock: ^(id data, NSError *error) {
                                if(handler) {
                                    handler((MHVV2ActionPlanTaskInstance*)data, error);
                                }
                            }];
}

///
/// Get a collection of task definitions
/// 
///  @param actionPlanTaskStatus  (optional)
///
///  @param maxPageSize The maximum number of entries to return per page. Defaults to 1000. (optional)
///
///  @returns MHVActionPlanTasksResponseV2ActionPlanTaskInstance_*
///
+ (NSURLSessionTask*)getActionPlanTasksWithActionPlanTaskStatus: (NSString*) actionPlanTaskStatus
    maxPageSize: (NSNumber*) maxPageSize
    completionHandler: (void (^ _Nonnull)(MHVActionPlanTasksResponseV2ActionPlanTaskInstance_* _Nullable output, NSError* _Nullable error)) handler {
    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks"];

    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];

    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];
    if (actionPlanTaskStatus != nil) {
        queryParams[@"actionPlanTaskStatus"] = actionPlanTaskStatus;
    }
    if (maxPageSize != nil) {
        queryParams[@"maxPageSize"] = maxPageSize;
    }

    id bodyParam = nil;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];

    return [MHVRemoteMonitoringClient requestWithPath: resourcePath
                                    method: @"GET"
                                pathParams: pathParams
                               queryParams: queryParams
                                formParams: formParams
                                      body: bodyParam
                                   toClass: [MHVActionPlanTasksResponseV2ActionPlanTaskInstance_ class]
                    //        responseType: [MHVActionPlanTasksResponseV2ActionPlanTaskInstance_* class]
                           completionBlock: ^(id data, NSError *error) {
                                if(handler) {
                                    handler((MHVActionPlanTasksResponseV2ActionPlanTaskInstance_*)data, error);
                                }
                            }];
}

///
/// Patch an update for an action plan task
/// 
///  @param actionPlanTask  
///
///  @returns MHVActionPlanTasksResponseV2ActionPlanTaskInstance_*
///
+ (NSURLSessionTask*)patchActionPlanTasksWithActionPlanTask: (MHVV2ActionPlanTaskInstance*) actionPlanTask
    completionHandler: (void (^ _Nonnull)(MHVActionPlanTasksResponseV2ActionPlanTaskInstance_* _Nullable output, NSError* _Nullable error)) handler {
    // verify the required parameter 'actionPlanTask' is set
    if (actionPlanTask == nil) {
        NSParameterAssert(actionPlanTask);
        if(handler) {
            NSDictionary * userInfo = @{NSLocalizedDescriptionKey : [NSString stringWithFormat:NSLocalizedString(@"Missing required parameter '%@'", nil),@"actionPlanTask"] };
            NSError* error = [NSError errorWithDomain:kMHVActionPlanTasksApiErrorDomain code:kMHVActionPlanTasksApiMissingParamErrorCode userInfo:userInfo];
            handler(nil, error);
        }
        return nil;
    }

    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks"];

    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];

    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];

    id bodyParam = nil;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];
    bodyParam = actionPlanTask;

    return [MHVRemoteMonitoringClient requestWithPath: resourcePath
                                    method: @"PATCH"
                                pathParams: pathParams
                               queryParams: queryParams
                                formParams: formParams
                                      body: bodyParam
                                   toClass: [MHVActionPlanTasksResponseV2ActionPlanTaskInstance_ class]
                    //        responseType: [MHVActionPlanTasksResponseV2ActionPlanTaskInstance_* class]
                           completionBlock: ^(id data, NSError *error) {
                                if(handler) {
                                    handler((MHVActionPlanTasksResponseV2ActionPlanTaskInstance_*)data, error);
                                }
                            }];
}

///
/// Post a new action plan task
/// 
///  @param actionPlanTask  
///
///  @returns MHVSystemObject*
///
+ (NSURLSessionTask*)postActionPlanTasksWithActionPlanTask: (MHVV2ActionPlanTask*) actionPlanTask
    completionHandler: (void (^ _Nonnull)(MHVSystemObject* _Nullable output, NSError* _Nullable error)) handler {
    // verify the required parameter 'actionPlanTask' is set
    if (actionPlanTask == nil) {
        NSParameterAssert(actionPlanTask);
        if(handler) {
            NSDictionary * userInfo = @{NSLocalizedDescriptionKey : [NSString stringWithFormat:NSLocalizedString(@"Missing required parameter '%@'", nil),@"actionPlanTask"] };
            NSError* error = [NSError errorWithDomain:kMHVActionPlanTasksApiErrorDomain code:kMHVActionPlanTasksApiMissingParamErrorCode userInfo:userInfo];
            handler(nil, error);
        }
        return nil;
    }

    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks"];

    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];

    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];

    id bodyParam = nil;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];
    bodyParam = actionPlanTask;

    return [MHVRemoteMonitoringClient requestWithPath: resourcePath
                                    method: @"POST"
                                pathParams: pathParams
                               queryParams: queryParams
                                formParams: formParams
                                      body: bodyParam
                                   toClass: [MHVSystemObject class]
                    //        responseType: [MHVSystemObject* class]
                           completionBlock: ^(id data, NSError *error) {
                                if(handler) {
                                    handler((MHVSystemObject*)data, error);
                                }
                            }];
}

///
/// Put an update for an action plan task
/// 
///  @param actionPlanTask  
///
///  @returns MHVActionPlanTasksResponseV2ActionPlanTaskInstance_*
///
+ (NSURLSessionTask*)putActionPlanTasksWithActionPlanTask: (MHVV2ActionPlanTaskInstance*) actionPlanTask
    completionHandler: (void (^ _Nonnull)(MHVActionPlanTasksResponseV2ActionPlanTaskInstance_* _Nullable output, NSError* _Nullable error)) handler {
    // verify the required parameter 'actionPlanTask' is set
    if (actionPlanTask == nil) {
        NSParameterAssert(actionPlanTask);
        if(handler) {
            NSDictionary * userInfo = @{NSLocalizedDescriptionKey : [NSString stringWithFormat:NSLocalizedString(@"Missing required parameter '%@'", nil),@"actionPlanTask"] };
            NSError* error = [NSError errorWithDomain:kMHVActionPlanTasksApiErrorDomain code:kMHVActionPlanTasksApiMissingParamErrorCode userInfo:userInfo];
            handler(nil, error);
        }
        return nil;
    }

    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks"];

    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];

    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];

    id bodyParam = nil;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];
    bodyParam = actionPlanTask;

    return [MHVRemoteMonitoringClient requestWithPath: resourcePath
                                    method: @"PUT"
                                pathParams: pathParams
                               queryParams: queryParams
                                formParams: formParams
                                      body: bodyParam
                                   toClass: [MHVActionPlanTasksResponseV2ActionPlanTaskInstance_ class]
                    //        responseType: [MHVActionPlanTasksResponseV2ActionPlanTaskInstance_* class]
                           completionBlock: ^(id data, NSError *error) {
                                if(handler) {
                                    handler((MHVActionPlanTasksResponseV2ActionPlanTaskInstance_*)data, error);
                                }
                            }];
}

///
/// 
/// 
///  @param trackingValidation  
///
///  @returns MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_*
///
+ (NSURLSessionTask*)validateActionPlanTasksTrackingWithTrackingValidation: (MHVTrackingValidation*) trackingValidation
    completionHandler: (void (^ _Nonnull)(MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_* _Nullable output, NSError* _Nullable error)) handler {
    // verify the required parameter 'trackingValidation' is set
    if (trackingValidation == nil) {
        NSParameterAssert(trackingValidation);
        if(handler) {
            NSDictionary * userInfo = @{NSLocalizedDescriptionKey : [NSString stringWithFormat:NSLocalizedString(@"Missing required parameter '%@'", nil),@"trackingValidation"] };
            NSError* error = [NSError errorWithDomain:kMHVActionPlanTasksApiErrorDomain code:kMHVActionPlanTasksApiMissingParamErrorCode userInfo:userInfo];
            handler(nil, error);
        }
        return nil;
    }

    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks/ValidateTracking"];

    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];

    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];

    id bodyParam = nil;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];
    bodyParam = trackingValidation;

    return [MHVRemoteMonitoringClient requestWithPath: resourcePath
                                    method: @"POST"
                                pathParams: pathParams
                               queryParams: queryParams
                                formParams: formParams
                                      body: bodyParam
                                   toClass: [MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_ class]
                    //        responseType: [MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_* class]
                           completionBlock: ^(id data, NSError *error) {
                                if(handler) {
                                    handler((MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_*)data, error);
                                }
                            }];
}



@end
